version 13.1 v1
Gizmo {
 onCreate "import sys\nthis = nuke.thisNode()\ninference = nuke.toNode(f\"\{this.name()\}.Inference1\")\nthis[\"gpuName\"].setValue(inference[\"gpuName\"].value())\nthis[\"channelsIn\"].setValue(\"rgba.red, rgba.green, rgba.blue\")\ninference.forceValidate()\nis_enabled = inference\[\"modelFile\"\].enabled()\nif (sys.platform.lower() == \"darwin\") and (not inference\[\"useGPUIfAvailable\"\].enabled()): this\[\"useGPUIfAvailable\"\].setValue(False), this\[\"useGPUIfAvailable\"\].setEnabled(False)\nif not is_enabled:\n    for k in this.knobs(): this[k].setEnabled(False)\nthis[\"halfPrecision\"].setVisible(this[\"useGPUIfAvailable\"].enabled())"
 knobChanged "this = nuke.thisNode()\nthis[\"halfPrecision\"].setVisible(this[\"useGPUIfAvailable\"].value())"
 onDestroy "nuke.thisNode()\[\"knobChanged\"].setValue(\"\")"
 addUserKnob {20 RealESRGAN}
 addUserKnob {26 localGPU l "Local GPU:" T ""}
 addUserKnob {26 gpuName l "" -STARTLINE T "NVIDIA TITAN RTX"}
 addUserKnob {6 useGPUIfAvailable l "Use GPU if available" t "Select this to render on the <b>Local GPU</b>, if available.\n\nYou can select this even if no GPU is currently available on your machine. The GPU will then be used whenever the script is opened on a machine which does have a GPU available. You should also select this if you wish to render from the command line with the <b>--gpu</b> option.\n\nIf this node requires full frames from its inputs, and is therefore unable to reduce its memory overhead, it will fall back to the CPU if an attempt to render a frame on the GPU fails due to lack of memory. When this occurs, a warning message will be printed to the console." +STARTLINE}
 useGPUIfAvailable true
 addUserKnob {26 ""}
 addUserKnob {26 channelsIn l "Channels In:" t "The channels the model expects as input." T "rgba.red, rgba.green, rgba.blue"}
 addUserKnob {41 in_colorspace l "Input Colorspace" t "Define the colorspace that the input image is in." T OCIOColorSpace1.in_colorspace}
 addUserKnob {6 halfPrecision l "Optimize for Speed and Memory" t "Whether to process at half float precision. This speeds up execution and enables the processing of larger images, however there is the risk of artifacts with some trained models." +STARTLINE}
}
 Input {
  inputs 0
  name Input1
  xpos 829
  ypos 35
 }
 OCIOColorSpace {
  in_colorspace scene_linear
  out_colorspace color_picking
  name OCIOColorSpace1
  knobChanged "nuke.toNode(\"OCIOColorSpace2\")\[\"out_colorspace\"].setValue(nuke.thisNode()\[\"in_colorspace\"].value())"
  xpos 829
  ypos 75
 }
 Inference {
  useGPUIfAvailable {{parent.useGPUIfAvailable}}
  modelFile "\[lsearch -inline \[plugins -all realesrgan_tiled_v2.cat] *.cat]"
  halfPrecision {{parent.halfPrecision}}
  serialiseKnob {overlap:50;tile_size:200;}
  name Inference1
  xpos 829
  ypos 129
  addUserKnob {20 User}
  addUserKnob {3 tile_overlap l "Tile Overlapping" t "Overlapping between individual tiles. Increase this value if you can see the edges between tiles. The downside of this is that the processing time will increase."}
  tile_overlap 50
  addUserKnob {3 tile_size_gizmo l "Tile Size" t "The image is going to be subdivided in separate sqare tiles. This knob controlls how large the tiles will be in pixel size. This also controlls how much GPU memory will be used. Lower tile size reduces the amount of needed memory."}
  tile_size_gizmo 200
 }
 OCIOColorSpace {
  in_colorspace color_picking
  out_colorspace scene_linear
  name OCIOColorSpace2
  xpos 829
  ypos 202
 }
 Output {
  name Output1
  xpos 829
  ypos 302
 }
end_group
